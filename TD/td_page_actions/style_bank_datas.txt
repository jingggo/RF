*** Settings ***
Resource          ../Comprehensive/td_company_res.txt

*** Keywords ***
get styles from whole page from style bank
    [Documentation]    Can both be used in PH Styles.
    ${styles}    create list
    page should contain element    //table[@class='table1']    No styles found.
    ${styles_table_html}    execute javascript    return $(".table1").html();
    ${styles}    get regexp matches    ${styles_table_html}    <a.*DetailImages.*>(.*)</a>    1
    log many    ${styles}
    [Return]    ${styles}

get styles from whole page from PH Style
    [Documentation]    Can both be used in PH Styles.
    ${styles}    create list
    page should contain element    //table[@class='table1']    No styles found.
    ${style_table_tr_n}    Get Matching Xpath Count    //table[@class='table1']/tbody/tr
    ${style_table_tr_n}    convert to integer    ${style_table_tr_n}
    ${style_n}    evaluate    ${style_table_tr_n}-${1}
    ${styles}    create list
    : FOR    ${style_index}    IN RANGE    2    ${style_n + 2}
    \    ${style}    Get Text    //table[@class='table1']/tbody/tr[${style_index}]/td[2]
    \    ${style}    fetch from left    ${style}    [    #to remove [DPH] mark
    \    ${style}    strip string    ${style}
    \    append to list    ${styles}    ${style}
    log many    ${styles}
    [Return]    ${styles}

Get Sorted UPC Infos Of a Style
    [Documentation]    return list per row
    ${upc_tr_pxpath}    Set variable    //table[@class="table4"]/tbody/tr
    Wait until keyword succeeds    60 sec    3 sec    Page should contain element    ${upc_tr_pxpath}
    ${ntr}    get matching xpath count    ${upc_tr_pxpath}
    ${ntr}    convert to integer    ${ntr}    #4
    ${size_infos}    create list
    : FOR    ${tr_index}    IN RANGE    ${1}    ${ntr}    #1,2,3
    \    ${size_info_aline}    execute javascript    return $("table.table4 tbody").children().eq(${tr_index}).text();    #eq() start from 1
    \    append to list    ${size_infos}    ${size_info_aline}
    log many    ${size_infos}
    sort list    ${size_infos}
    #    &nbsp; Before info
    [Return]    ${size_infos}

Get Color Des and Code
    ${ninput}    execute javascript    return $("div.DTFC_LeftWrapper").find("input").length;
    ${color_info_vals}    create list
    : FOR    ${i}    IN RANGE    ${ninput}
    \    ${color_info_val}    execute javascript    return $("div.DTFC_LeftWrapper").find("input").eq(${i}).val();    #$("div.DTFC_LeftWrapper").find("input").eq(0).val()
    \    append to list    ${color_info_vals}    ${color_info_val}
    log many    ${color_info_vals}
    [Return]    ${color_info_vals}

Get Color Info Scroll Data
    ${nmid}    execute javascript    return $("div.dataTables_scroll").find("input").length;
    ${color_info_vals}    create list
    : FOR    ${i}    IN RANGE    ${nmid}
    \    ${color_info_val}    execute javascript    return $("div.dataTables_scroll").find("input").eq(0).val();    #$("div.DTFC_LeftWrapper").find("input").eq(0).val()
    \    append to list    ${color_info_vals}    ${color_info_val}
    log many    ${color_info_vals}
    [Return]    ${color_info_vals}

Get PH Info Vals
    ${ph_vals_len}    execute javascript    return $("form#placeholderstyleform").find("input").length;
    ${color_info_vals}    create list
    : FOR    ${i}    IN RANGE    ${ph_vals_len}
    \    ${color_info_val}    execute javascript    return $("form#placeholderstyleform").find("input").eq(${i}).val();    #$("div.DTFC_LeftWrapper").find("input").eq(0).val()
    \    append to list    ${color_info_vals}    ${color_info_val}
    log many    ${color_info_vals}
    [Return]    ${color_info_vals}

Get color names on color info page
    ${color_names}    Execute Javascript    var result=[];$("input[name='color_name']").each(function(){result.push($(this).val()); });return result;
    Remove values from list    ${color_names}    ${EMPTY}
    Log    ${color_names}
    [Return]    ${color_names}

Get size names on sizing info page
    ${size_names}    Execute Javascript    var result=[];$("input[name='size_name']").each(function(){result.push($(this).val()); });return result;
    Remove values from list    ${size_names}    ${EMPTY}
    Log    ${size_names}
    [Return]    ${size_names}
