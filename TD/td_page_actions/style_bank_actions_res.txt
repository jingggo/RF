*** Settings ***
Resource          ../Comprehensive/td_company_res.txt

*** Keywords ***
click next in style bank
    ${next_exist}    run keyword and return status    page should contain element    ${sb_table_top_next_path}
    run keyword if    ${next_exist}    click link    ${sb_table_top_next_path}

select from season and year dropdown
    [Arguments]    ${label}
    [Documentation]    Catalog Season Desc-Catalog Season Year in CK.
    ...
    ...    If the no ph styles created in PH style Bank, the initial label of the selected season year is 'season-year' or it's rename.
    ${default}    Get selected list label    ${season_year_select_path}
    Return from keyword if    '${default}'=='${label}'
    Select from list by label    ${season_year_select_path}    ${label}
    click element    name=view
    wait until page contains element    //option[@selected and text()='${label}']    #//option[@selected and text()='SP-2018']

select from ph view option in ph style page
    [Arguments]    ${label}
    [Documentation]    label: can be Style/Color/Size; case sensitive
    ${is_scz_view}    Run keyword and return status    Page should contain element    ${ph_view_option_path}
    Return from keyword if    ${is_scz_view}==${False}    No style/color/size options to view.
    select from list by label    ${ph_view_option_path}    ${label}
    click button    name=view
    wait until page contains element    //option[@selected and text()='${label}']

go to advanced search on style bank
    ${advanced_search_exist}    run keyword and return status    page should contain Link    Advanced Search    Advanced Search link doesn't show.
    return from keyword if    ${advanced_search_exist}==${False}    ${advanced_search_exist}
    click link    Advanced Search
    wait until page contains element    id=key    5    Filtered By on Advanced Search Page doesn't display.
    [Return]    ${advanced_search_exist}

Filter styles by advanced search
    [Arguments]    &{styles_filter_criterias}
    Choose Filter Hierarchy    &{styles_filter_criterias}
    Click element    ${sb_advanced_search_btn1_path}
    wait until page does not contain element    //input[@value='Wait']
    wait until page contains    Criteria:    20    Timeout when filter worksheet.    #&nbsp; in PH page space is this.

click style link
    [Arguments]    ${style}    ${style_link_txt}
    [Documentation]    Copy/Copy to PH/Style Info/Colors/Sizes/UPC
    ...
    ...    xpath can not recognize text with space in it. so input unique word for 'style_link_txt'.
    ...
    ...    'style_link_txt' should be "Copy/PH/Style/Colors/Sizes/UPC" and case sensitive.
    ${style_tr_path}    replace string    ${style_tr_path}    {style}    ${style}
    wait until element is visible    ${style_tr_path}//a[contains(text(),'${style_link_txt}')]
    click link    ${style_tr_path}//a[contains(text(),'${style_link_txt}')]
    run keyword if    '${style_link_txt}'=='${style}'    wait until page contains element    ${sb_image_view_title1_path}    10
    run keyword if    '${style_link_txt}'=='Style'    wait until page contains element    ${sb_style_info_title2_path}    10
    run keyword if    '${style_link_txt}'=='Colors'    wait until page contains element    ${sb_color_info_title2_path}    10
    run keyword if    '${style_link_txt}'=='Sizes'    wait until page contains element    ${sb_size_info_title1_path}    10
    run keyword if    '${style_link_txt}'=='UPC'    wait until page contains element    ${sb_upc_title1_path}    10
    sleep    0.1

click ph style edit
    [Arguments]    ${ph_style}
    ${ph_style_edit_path}    replace string    ${ph_style_edit_path}    {ph_style}    ${ph_style}
    wait until page contains element    ${ph_style_edit_path}
    click element    ${ph_style_edit_path}
    wait until page contains element    ${sb_style_info_title2_path}

go to size horizontal sequence
    wait until page contains element    ${size_profile_horizontal_sequence_path}
    click element    ${size_profile_horizontal_sequence_path}
    wait until page contains element    ${size_profile_horizontal_title3_path}

go to size range
    wait until page contains element    ${size_profile_size_range_path}
    click element    ${size_profile_size_range_path}
    wait until page contains element    ${size_profile_size_range_title2_path}

Generate Style Bank Report
    [Arguments]    ${report_type}    ${report_store_path}    &{styles_filter_criterias}
    [Documentation]    Report type by label;
    ...    Report would be generated with a range of random number suffixes;
    Choose Filter Hierarchy    &{styles_filter_criterias}
    Select From List By Label    id=sl1    ${report_type}
    Click element    name=download
    ${download_sequence}    get time    epoch
    create directory    ${report_store_path}
    ${random_num}    generate random string    8    [NUMBERS]
    ${store_path_file}    catenate    SEPARATOR=${/}    ${report_store_path}    ${user}.do_linesheetDownload_${random_num}.xls
    Download to local    ${store_path_file}
    [Return]    ${store_path_file}

Generate Style Bank Report By Style
    [Arguments]    ${report_type}    ${report_store_path}    ${styles_by_comma}    ${upcs_by_comma}    &{styles_filter_criterias}
    [Documentation]    Report type by label;
    ...    Report would be generated with current time suffixes;
    Choose Filter Hierarchy    &{styles_filter_criterias}
    Input text    ${sb_as_style_input_path}    ${styles_by_comma}    #styles delimit by comma
    Input text    ${sb_as_upc_input_path}    ${upcs_by_comma}    #upcs delimit by comma
    Select From List By Label    id=sl1    ${report_type}
    Click element    name=download    # a processing page poped up, and the selected window is still main
    @{current_time}    get time    year,month,day,hour,min,sec
    ${create_time}    Evaluate    ''.join(${current_time})
    ${report_name_without_spechars}    Remove string    ${report_type}    /
    ${store_path_file}    catenate    SEPARATOR=${/}    ${report_store_path}    ${user}_${report_name_without_spechars}_${create_time}.xls
    create directory    ${report_store_path}
    Comment    Page should not contain error in download page
    Download to local    ${store_path_file}
    : FOR    ${x}    IN RANGE    5    #If download loading page did not disapper, the loading page would close
    \    ${windows_list}    List windows
    \    ${nwindows}    Get length    ${windows_list}
    \    Exit for loop if    ${nwindows}== ${1}
    \    Sleep    5 sec
    \    Continue for loop if    ${nwindows}> ${1}
    \    Select window    ${windows_list[1]}
    \    close window
    [Teardown]    Close linesheet downloading page
    [Return]    ${store_path_file}

Generate Style Bank Report By Style With Error
    [Arguments]    ${report_type}    ${styles_by_comma}    ${upcs_by_comma}    ${error_msg}    &{styles_filter_criterias}
    [Documentation]    Report type by label;
    ...    Report would be generated with current time suffixes;
    Choose Filter Hierarchy    &{styles_filter_criterias}
    Input text    ${sb_as_style_input_path}    ${styles_by_comma}    #styles delimit by comma
    Input text    ${sb_as_upc_input_path}    ${upcs_by_comma}    #upcs delimit by comma
    Select From List By Label    id=sl1    ${report_type}
    Click element    name=download    # a processing page poped up, and the selected window is still main
    Comment    @{current_time}    get time    year,month,day,hour,min,sec
    Comment    ${create_time}    Evaluate    ''.join(${current_time})
    Comment    ${report_name_without_spechars}    Remove string    ${report_type}    /
    Comment    ${store_path_file}    catenate    SEPARATOR=${/}    ${report_store_path}    ${user}_${report_name_without_spechars}_${create_time}.xls
    Comment    create directory    ${report_store_path}
    Comment    Page should not contain error in download page
    : FOR    ${x}    IN RANGE    5    #If download loading page did not disapper, the loading page would close
    \    ${windows_list}    List windows
    \    ${nwindows}    Get length    ${windows_list}
    \    Exit for loop if    ${nwindows}== ${2}
    \    Sleep    5 sec
    ${windows_list}    List windows
    ${nwindows}    Get length    ${windows_list}
    Should be equal as integers    ${nwindows}    2    Poped page doesn't pop up.
    Select window    new
    Run keyword and ignore error    Wait until page does not contain    Downloading Linesheet...    20
    Wait until page contains    ${error_msg}    5
    [Teardown]    Close linesheet downloading page

Advanced Search On Style Bank By Style
    [Arguments]    @{styles}
    [Documentation]    type of styles is list.
    Go to advanced search page
    ${styles_comma}    Evaluate    ','.join(${styles})
    Input Text    ${sb_as_style_input_path}    ${styles_comma}
    Click Element    ${sb_advanced_search_btn1_path}
    Wait Until Page Contains Element    ${sb_search_criteria_txt_path}

Go To UPC Page
    [Arguments]    ${style}
    ${upc_locator}    replace string    ${sb_style_upc_path}    {style}    ${style}
    wait until page contains element    ${upc_locator}
    Click Element    ${upc_locator}
    Wait Until Page Contains Element    ${sb_upc_title1_path}

Go to advanced search page
    ${selected_value}    Get selected list value    name=seasonandyear
    Run keyword if    '${selected_value}'=='0'    Select from list by index    name=seasonandyear    1
    Run keyword if    '${selected_value}'=='0'    Click button    View
    Wait until keyword succeeds    30 sec    3 sec    Page should contain link    Advanced Search
    Click Link    Advanced Search
    Wait Until Page Contains Element    ${sb_as_style_input_path}
    Wait Until Page Contains    Filter Hierarchy
    Page should contain    Filtered By

Page should not contain error in download page
    [Documentation]    [ER-10141] Your search returned no results. Please try again.
    : FOR    ${x}    IN RANGE    10
    \    ${windows_list}    List windows
    \    ${nwindows}    Get length    ${windows_list}
    \    exit for loop if    ${nwindows}==${2}
    \    Sleep    3 sec
    Run keyword if    ${x}==${9}    Fail    Only one window displays in 30 secs.
    Run keyword if    ${nwindows}==${2}    Select window    ${windows_list[1]}
    ${download_window}    Run keyword and return status    win wait    Enter name of file to save to…    \    10 sec
    Return from keyword if    ${download_window}
    ${txt}    Get text    //html
    ${error_status}    Run keyword and return status    Page should not contain    ErrorMessage
    Run keyword if    ${error_status}==${False}    Page should not contain    ErrorMessage
    Run keyword if    ${error_status}==${False}    Close window
    Comment    Run keyword and continue on failure    Wait until page does not contain    Downloading Linesheet...    120
    Select window    ${windows_list[0]}

Click Search Button
    Click element    ${sb_advanced_search_btn1_path}
    Sleep    1
    Wait until page does not contain element    //input[@value='Wait']
    Wait until page contains element    name=seasonandyear    #//input[@value='Search']    Dropdown element
    Page should not contain    ErrorMessage

Add More Sizes Rows
    Click button    More Sizes
    Sleep    1
    Wait until page does not contain element    ${please_wait_button}

Go to style info page
    [Arguments]    ${locator}
    Click element    ${locator}
    Wait until page contains    StyleInfo

Go to colors info page
    [Arguments]    ${locator}
    Click element    ${locator}
    Wait until page contains    ColorInfo    10
    Page should not contain    ErrorMessage

Go to size info page
    [Arguments]    ${locator}
    Click element    ${locator}
    Wait until page contains    SizingInfo    10
    Page should not contain    ErrorMessage

Delete selected ph styles
    [Arguments]    @{locators}
    : FOR    ${locator}    IN    @{locators}
    \    Select checkbox    ${locator}
    Click button    Delete Selected
    Wait until page contains    AreYouSure?    5
    Click button    Delete
    Wait until page contains    ThankYou
    Page should contain    All selected placeholder styles have been deleted.

Close linesheet downloading page
    ${windows_list}    List windows
    Remove from list    ${windows_list}    0    #rm main
    : FOR    ${win}    IN    @{windows_list}
    \    Select window    ${win}
    \    Close window
    Select window    main
