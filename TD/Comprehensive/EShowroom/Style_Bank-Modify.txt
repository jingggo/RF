*** Settings ***
Documentation     Require attributes on Style Info Page are from Hierarchy Production Attributes.
Suite Setup       Login7thonline    ${URL}    ff    ${USER}    ${COMPANY}    ${browser_profile_ff_1}
Resource          ../../td_page_actions/style_bank_actions_res.txt
Resource          style_bank_test_data_ef.txt
Variables         style_bank_test_variables_ef.py
Resource          ../../td_page_actions/ph_styles_actions_res.txt

*** Test Cases ***
Add-New Style-Requires should be red
    [Documentation]    Bug #24233
    Entry page via navimenu    ${navi_style_bank_path}    StyleBank
    Page should contain element    ${sb_add_new_style_btn}
    Element should be visible    ${sb_add_new_style_btn}
    Click element    ${sb_add_new_style_btn}
    Wait until page contains    StyleInfo    10
    ${required_count}    Get matching xpath count    //b[@class='required']
    ${required_count}    Convert to integer    ${required_count}
    connect to database using custom params    cx_Oracle    ${APPBETA}    #'appuser','sol','10.125.2.221/auto1app'
    @{hierarchys}    query    select distinct cc.* from company_criteria cc where cc.company_id=${PARENT_COMPANY_ID}
    Log many    @{hierarchys}
    disconnect from database
    ${system_product_attributes}    Create list    Style #    Department    Division    Class    Group
    ...    Category    Fabrication    Product Category
    ${all_hierarchys}    Create list
    : FOR    ${hierarchy}    IN    @{hierarchys}
    \    ${hierarchy}    Convert to list    ${hierarchy}
    \    ${criterias}    Get slice from list    ${hierarchy}    2    11
    \    Remove values from list    ${criterias}    ${None}
    \    log    ${criterias}
    \    ${all_hierarchys}    Combine lists    ${all_hierarchys}    ${criterias}
    log many    ${all_hierarchys}
    ${all_hierarchys}    Remove duplicates    ${all_hierarchys}
    ${product_hierarchys}    Create list
    : FOR    ${product_hierarchy}    IN    @{all_hierarchys}
    \    ${is_product}    Run keyword and return status    List should contain value    ${system_product_attributes}    ${product_hierarchy}
    \    Run keyword if    ${is_product}    Append to list    ${product_hierarchys}    ${product_hierarchy}
    log    ${product_hierarchys}
    Set suite variable    ${REQUIRE_PRODUCT_ATTRIBUTES}    ${product_hierarchys}
    ${product_hierarchys_count}    Get length    ${product_hierarchys}
    Should be equal as integers    ${required_count}    ${product_hierarchys_count}    Real count of require attributes is: ${required_count}, but expected is: ${product_hierarchys_count}

Add-New Style-Requires blank
    [Documentation]    [ER-80400] Required field IP_Dept is blank
    ...
    ...    style_num/class/department/division
    ${style_num}    Set variable    autotest
    Entry page via navimenu    ${navi_style_bank_path}    StyleBank
    Page should contain element    ${sb_add_new_style_btn}
    Element should be visible    ${sb_add_new_style_btn}
    Click element    ${sb_add_new_style_btn}
    Wait until page contains    StyleInfo    10
    Page should contain element    ${style_info_add_colors}
    Element should be visible    ${style_info_add_colors}
    Click element    ${style_info_add_colors}
    Sleep    2
    Page should contain    [ER-80025] EF Style is missing.
    Click Button    Back    #//input[@value='Back']
    Wait until page contains    StyleInfo
    Input Text    name=stylenum    ${style_num}
    ${renamed_class}    Get text    //td[input[@name='class']]/preceding-sibling::td[1]/b    #Style Classification:
    ${renamed_class}    Fetch from left    ${renamed_class}    :
    ${renamed_class}    Strip string    ${renamed_class}
    Click element    ${style_info_add_colors}
    Wait until page contains    [ER-80400] Required field ${renamed_class} is blank.
    Click Button    Back

Add-New Style-Color-Size
    [Documentation]    Add successfully
    ${style_num}    Set variable    SBUI002
    ${division}    Set variable    SBAUTODIV001
    ${class}    Set variable    SBCLASS001
    ${color_desc}    Set variable    SBCOLD001
    ${color_code}    Set variable    SBCOLC001
    ${size_name}    Set variable    S
    ${size_code}    Set variable    Small
    Entry page via navimenu    ${navi_style_bank_path}    StyleBank
    Page should contain element    ${sb_add_new_style_btn}
    Element should be visible    ${sb_add_new_style_btn}
    Click element    ${sb_add_new_style_btn}
    Wait until page contains    StyleInfo    10
    Comment    ${REQUIRE_PRODUCT_ATTRIBUTES}
    Input text    name=stylenum    ${style_num}
    Input text    name=class    ${class}
    Select from list by index    name=department    1
    Input text    name=division    ${division}
    Page should contain element    ${style_info_add_colors}
    Element should be visible    ${style_info_add_colors}
    Click element    ${style_info_add_colors}
    Sleep    2
    Page should not contain    ErrorMessage
    Wait until page contains    ColorInfo
    Input text    //div[@class='DTFC_LeftBodyWrapper']//tbody/tr[1]//input[@name='color_name']    ${color_desc}
    Input text    //div[@class='DTFC_LeftBodyWrapper']//tbody/tr[1]//input[@name='color_code']    ${color_code}
    Click Button    name=saveandaddsizes
    Sleep    2
    Page should not contain    ErrorMessage
    Wait until page contains    SizingInfo
    Input text    //table[@class='table4']/tbody/tr[2]//input[@name='size_name']    ${size_name}
    Input text    //table[@class='table4']/tbody/tr[2]//input[@name='size_code']    ${size_code}
    Click button    Save Size Info
    Wait until page does not contain    ${please_wait_button}
    Wait until page contains    StyleBank
    Comment    ${is_reactivated}    Run keyword and return status    Page should contain    ThankYou    #You have reactivated the following style color(s):
    Comment    Run keyword if    ${is_reactivated}    Click button    Finished
    #If Deleted style reactived, this case would be failed.

Add-New Size with dimension
    ${searched_style}    Set variable    SBUI001
    ${season-year}    Set variable    RESORT-2017
    ${color_desc}    Set variable    SBCOLD002
    ${color_code}    Set variable    SBCOLC002
    ${size_desc}    Set variable    SX0
    ${size_code}    Set variable    ${EMPTY}
    Entry page via navimenu    ${navi_style_bank_path}    StyleBank
    Select from season and year dropdown    ${season-year}
    Input text    id=Style    ${searched_style}
    Click Button    Search
    Wait until page contains    ${searched_style}
    Page should contain link    ${searched_style}
    Click link    Sizes
    Wait until page contains    SizingInfo
    ${size_table_default_nrows}    Get matching xpath count    //table[@class='table4']/tbody/tr[1]/following-sibling::tr    #8
    ${blank_size_nrows}    Get matching xpath count    //table[@class='table4']/tbody/tr[1]/following-sibling::tr/td[1]/input[@value='']    #1
    ${size_table_default_nrows}    Convert to integer    ${size_table_default_nrows}
    ${blank_size_nrows}    Convert to integer    ${blank_size_nrows}
    Run keyword if    ${blank_size_nrows}==${0}    Add More Sizes Rows
    ${new_size_xpath_index}    Evaluate    ${size_table_default_nrows}-${blank_size_nrows}+1
    Input Text    //table[@class='table4']/tbody/tr[1]/following-sibling::tr[${new_size_xpath_index}]//input[@name='size_name']    ${size_desc}
    Input Text    //table[@class='table4']/tbody/tr[1]/following-sibling::tr[${new_size_xpath_index}]//input[@name='size_code']    ${size_code}
    Click button    Save Size Info
    Wait until page does not contain element    ${please_wait_button}
    Wait until page contains    ErrorMessage
    Page should contain    [ER-30061] The size "${size_desc}" does not exist in the company size profile. Please add the size into company size profile first by linesheet upload.

Edit-Style Info-Directly modify
    ${searched_style}    Set variable    SBUI001
    Entry page via navimenu    ${navi_style_bank_path}    StyleBank
    Advanced search on style bank by style    ${searched_style}
    ${style_href}    Get element attribute    //a[text()='${searched_style}']@href    #/bin-java/efsnPackage.do_vendorStyleBankDetailImages?styleid=10014502&seasonid=2&year=2017
    ${style_info_path}    Get regexp matches    ${style_href}    styleid=(.*?)&seasonid    1
    ${style_info_path}    Get from list    ${style_info_path}    0
    Go to style info page    //a[contains(@href, '${style_info_path}') and text()='Style Info']

Edit-Style Info-Change Dropdown
    [Documentation]    Change all dropdown, then click save style info button. Save successfully.
    ${searched_style}    Set variable    SBUI001
    Entry page via navimenu    ${navi_style_bank_path}    StyleBank
    Advanced search on style bank by style    ${searched_style}
    ${style_href}    Get element attribute    //a[text()='${searched_style}']@href    #/bin-java/efsnPackage.do_vendorStyleBankDetailImages?styleid=10014502&seasonid=2&year=2017
    ${style_info_path}    Get regexp matches    ${style_href}    styleid=(.*?)&seasonid    1
    ${style_info_path}    Get from list    ${style_info_path}    0
    Go to style info page    //a[contains(@href, '${style_info_path}') and contains(text(), 'Style')]
    ${all_dropdown_counts}    Get matching xpath count    //div[@class='maincontent']//select
    ${all_dropdown_counts}    Convert to integer    ${all_dropdown_counts}
    ${sel_attributes}    Create list    hangfold    styleprepack    category    department    sizerangeid
    ...    categorydetail    categorydetail1    categorydetail2    fabricMaterial    design
    : FOR    ${sel_attribute}    IN    @{sel_attributes}
    \    ${labels}    Get list items    ${sel_attribute}
    \    ${selected_label}    Get selected list label    ${sel_attribute}
    \    Remove values from list    ${labels}    ${selected_label}    ${SPACE}
    \    ${labels_count}    Get length    ${labels}
    \    Continue for loop if    ${labels_count}==${0}
    \    ${random_label}    Evaluate    random.sample(${labels},1)    random
    \    Select from list by label    ${sel_attribute}    ${random_label[0]}
    Click Button    Save Style Info
    Wait until page does not contain element    ${please_wait_button}
    Wait until page contains    StyleBank    20
    Page should not contain    ErrorMessage

Edit-Style Info-Upload Image
    ${searched_style}    Set variable    SBUI001
    Entry page via navimenu    ${navi_style_bank_path}    StyleBank
    Advanced search on style bank by style    ${searched_style}
    ${style_href}    Get element attribute    //a[text()='${searched_style}']@href    #/bin-java/efsnPackage.do_vendorStyleBankDetailImages?styleid=10014502&seasonid=2&year=2017
    ${style_info_path}    Get regexp matches    ${style_href}    styleid=(.*?)&seasonid    1
    ${style_info_path}    Get from list    ${style_info_path}    0
    Go to style info page    //a[contains(@href, '${style_info_path}') and contains(text(), 'Style')]
    ${file_inputs}    Create list    previewfile    zoominfile    detailfile    backviewfile
    Comment    ${EXECDIR} = D:\learngitt\RFProject\TD\Comprehensive\EShowroom
    Log variables
    Log    ${EXECDIR}${/}style_bank_upload_files
    ${file_dir}    Set variable    ${EXECDIR}${/}style_bank_upload_files    #    D:${/}learngitt${/}RFProject${/}TD${/}Comprehensive${/}EShowroom${/}style_bank_upload_files
    : FOR    ${file_input}    IN    @{file_inputs}
    \    Choose File    ${file_input}    ${file_dir}${/}${file_input}.jpg
    Click Button    Save Style Info
    Wait until page does not contain element    ${please_wait_button}
    Wait until page contains    StyleBank    20
    Page should not contain    ErrorMessage

Edit-Style Info-Remove back view image
    ${searched_style}    Set variable    SBUI001
    Entry page via navimenu    ${navi_style_bank_path}    StyleBank
    Advanced search on style bank by style    ${searched_style}
    ${style_href}    Get element attribute    //a[text()='${searched_style}']@href    #/bin-java/efsnPackage.do_vendorStyleBankDetailImages?styleid=10014502&seasonid=2&year=2017
    ${style_info_path}    Get regexp matches    ${style_href}    styleid=(.*?)&seasonid    1
    ${style_info_path}    Get from list    ${style_info_path}    0
    Go to style info page    //a[contains(@href, '${style_info_path}') and contains(text(), 'Style')]
    ${remove_images_name}    Create list    deletesmallimage    deletelargeimage    delete_detail    delete_backview
    : FOR    ${remove_image_name}    IN    @{remove_images_name}
    \    Select checkbox    ${remove_image_name}
    Click Button    Save Style Info
    Wait until page does not contain element    ${please_wait_button}
    Wait until page contains    StyleBank    20
    Page should not contain    ErrorMessage

Edit-Colors-Add Color
    ${searched_style}    Set variable    SBUI001
    ${season-year}    Set variable    RESORT-2017
    ${color_desc}    Set variable    SBCOLD002
    ${color_code}    Set variable    SBCOLC002
    Entry page via navimenu    ${navi_style_bank_path}    StyleBank
    Select from season and year dropdown    ${season-year}
    Input text    id=Style    ${searched_style}
    Click Button    Search
    Wait until page contains    ${searched_style}
    Page should contain link    ${searched_style}
    Click Link    Colors
    Wait until page contains    ColorInfo
    #    Execute javascript
    Input text    //div[@class='DTFC_LeftBodyWrapper']//tbody/tr[2]//input[@name='color_name']    ${color_desc}
    Input text    //div[@class='DTFC_LeftBodyWrapper']//tbody/tr[2]//input[@name='color_code']    ${color_code}
    Click Button    Save Color Info
    Wait until page contains    StyleBank

Edit-Colors-Modify Color
    [Documentation]    Upload Color row
    ${searched_style}    Set variable    SBUI001
    ${update_color_name}    Set variable    SBUPCOLD001
    ${update_color_code}    Set variable    SBUPCOLC001
    Entry page via navimenu    ${navi_style_bank_path}    StyleBank
    Advanced search on style bank by style    ${searched_style}
    ${style_href}    Get element attribute    //a[text()='${searched_style}']@href    #/bin-java/efsnPackage.do_vendorStyleBankDetailImages?styleid=10014502&seasonid=2&year=2017
    ${style_id}    Get regexp matches    ${style_href}    styleid=(.*?)&seasonid    1
    ${style_id}    Get from list    ${style_id}    0
    Go to colors info page    //a[contains(@href, '${style_id}') and text()='Colors']
    ${existed_color_name_count}    Get matching xpath count    //input[@name='color_name' and not(@value='')]    #${existed_color_name_count_path}
    ${existed_color_name_count}    Convert to integer    ${existed_color_name_count}
    Run keyword if    ${existed_color_name_count}<1    Fail    Style Number: '${searched_style}' does not have color.
    ${random_existed_color_row}    Evaluate    random.randint(1,${existed_color_name_count})    random
    #modify color name and color code
    Input text    ${color_info_left_body_table_path}/tbody/tr[${random_existed_color_row}]//input[@name='color_name']    ${update_color_name}
    Input text    ${color_info_left_body_table_path}/tbody/tr[${random_existed_color_row}]//input[@name='color_code']    ${update_color_code}
    #modify color info scroll body
    ${color_info_scroll_tr_path}    Catenate    SEPARATOR=    ${color_info_scroll_table_path}    /tbody/tr[${random_existed_color_row}]
    ${td_count}    Get matching xpath count    ${color_info_scroll_tr_path}/td
    ${td_count}    Convert to integer    ${td_count}
    : FOR    ${input_name}    IN    @{COLOR_INFO_SCROLL_BODY_INPUT_NAMES}
    \    ${input_text}    Generate random string    4
    \    ${yyyy}    ${mm}    ${dd}    Get time    year,month,day    #mm/dd/yyyy
    \    ${input_text}    Set variable if    '${input_name}'=='start_ship_date' or '${input_name}'=='product_stop_date'    ${mm}/${dd}/${yyyy}    ${input_text}
    \    Continue for loop if    '${input_name}'=='ly_style_number' or '${input_name}'=='ly_color_code'
    \    Input text    ${color_info_scroll_tr_path}//input[@name='${input_name}']    ${input_text}
    : FOR    ${sel_name}    IN    @{COLOR_INFO_SCROLL_BODY_LIST_NAMES}
    \    ${color_info_scroll_list}    Get list items    ${color_info_scroll_tr_path}//select[@name='${sel_name}']
    \    ${selected_scroll_item}    Get selected list label    ${color_info_scroll_tr_path}//select[@name='${sel_name}']
    \    Remove values from list    ${color_info_scroll_list}    ${selected_scroll_item}    ${SPACE}
    \    ${color_info_scroll_list_len}    Get length    ${color_info_scroll_list}
    \    ${random_item}    Run keyword unless    ${color_info_scroll_list_len}==${0}    Evaluate    random.sample(${color_info_scroll_list},1)    random
    \    Run keyword unless    ${color_info_scroll_list_len}==${0}    Select from list by label    ${color_info_scroll_tr_path}//select[@name='${sel_name}']    ${random_item[0]}
    : FOR    ${input_name}    IN    standardcost    transfer_price    whsl    low_cost
    ...    msrp    low_retail
    \    ${input_text}    Generate random string    3    [NUMBERS]
    \    Input text    ${color_info_scroll_tr_path}//input[@name='${input_name}']    ${input_text}
    Click button    Save Color Info
    Sleep    2
    Wait until page contains    StyleBank

Edit-Colors-Delete Color
    ${searched_style}    Set variable    SBUI001
    ${season-year}    Set variable    RESORT-2017
    ${color_desc}    Set variable    SBCOLD002
    ${color_code}    Set variable    SBCOLC002
    Entry page via navimenu    ${navi_style_bank_path}    StyleBank
    Select from season and year dropdown    ${season-year}
    Input text    id=Style    ${searched_style}
    Click Button    Search
    Wait until page contains    ${searched_style}
    Page should contain link    ${searched_style}
    Click Link    Colors
    Wait until page contains    ColorInfo
    ${style_color_id}    Get element attribute    //input[@value='${color_desc}']/following-sibling::input@value    #//input[@value='SBCOLD002']/following-sibling::input
    Select checkbox    //input[@value='${style_color_id}' and @name='del_color']
    Click Button    Save Color Info
    Sleep    2
    Wait until page contains    StyleBank

Edit-Colors-Upload Color Swatch
    ${searched_style}    Set variable    SBUI001
    ${swatchfile_file_path}    Set variable    ${EXECDIR}${/}style_bank_upload_files${/}swatchfile.jpg
    Entry page via navimenu    ${navi_style_bank_path}    StyleBank
    Advanced search on style bank by style    ${searched_style}
    ${style_href}    Get element attribute    //a[text()='${searched_style}']@href    #/bin-java/efsnPackage.do_vendorStyleBankDetailImages?styleid=10014502&seasonid=2&year=2017
    ${style_id}    Get regexp matches    ${style_href}    styleid=(.*?)&seasonid    1
    ${style_id}    Get from list    ${style_id}    0
    Go to colors info page    //a[contains(@href, '${style_id}') and text()='Colors']
    ${existed_color_name_count}    Get matching xpath count    //input[@name='color_name' and not(@value='')]    #${existed_color_name_count_path}
    ${existed_color_name_count}    Convert to integer    ${existed_color_name_count}
    Run keyword if    ${existed_color_name_count}<1    Fail    Style Number: '${searched_style}' does not have color.
    ${random_existed_color_row}    Evaluate    random.randint(1,${existed_color_name_count})    random
    ${color_info_scroll_tr_path}    Catenate    SEPARATOR=    ${color_info_scroll_table_path}    /tbody/tr[${random_existed_color_row}]
    Choose file    ${color_info_scroll_tr_path}//input[@name='swatchfile']    ${swatchfile_file_path}
    Click button    Save Color Info
    Sleep    2
    Wait until page contains    StyleBank

Edit-Colors-View Color Swatch
    ${searched_style}    Set variable    SBUI001
    Entry page via navimenu    ${navi_style_bank_path}    StyleBank
    Advanced search on style bank by style    ${searched_style}
    ${style_href}    Get element attribute    //a[text()='${searched_style}']@href    #/bin-java/efsnPackage.do_vendorStyleBankDetailImages?styleid=10014502&seasonid=2&year=2017
    ${style_id}    Get regexp matches    ${style_href}    styleid=(.*?)&seasonid    1
    ${style_id}    Get from list    ${style_id}    0
    Go to colors info page    //a[contains(@href, '${style_id}') and text()='Colors']
    Click button    View Color Swatch
    Sleep    2
    Wait until page contains    SwatchSheet    10
    Click button    Back
    Wait until page contains    ColorInfo    10

Edit-Colors-More Colors
    ${searched_style}    Set variable    SBUI001
    Entry page via navimenu    ${navi_style_bank_path}    StyleBank
    Advanced search on style bank by style    ${searched_style}
    ${style_href}    Get element attribute    //a[text()='${searched_style}']@href    #/bin-java/efsnPackage.do_vendorStyleBankDetailImages?styleid=10014502&seasonid=2&year=2017
    ${style_id}    Get regexp matches    ${style_href}    styleid=(.*?)&seasonid    1
    ${style_id}    Get from list    ${style_id}    0
    Go to colors info page    //a[contains(@href, '${style_id}') and text()='Colors']
    ${default_color_nrows}    Get matching xpath count    ${color_info_left_body_table_path}/tbody/tr
    ${default_color_nrows}    Convert to integer    ${default_color_nrows}    #8
    Click button    name=more colors
    Sleep    2
    Wait until page does not contain element    ${please_wait_button}
    Wait until page contains element    ${color_info_left_body_table_path}/tbody/tr
    ${update_color_nrows}    Get matching xpath count    ${color_info_left_body_table_path}/tbody/tr
    ${update_color_nrows}    Convert to integer    ${update_color_nrows}    #16
    ${expected}    Evaluate    ${default_color_nrows}*2
    Should be equal as integers    ${expected}    ${update_color_nrows}

Edit-Sizes-Add size name
    ${searched_style}    Set variable    SBUI001
    ${size_desc}    Set variable    M
    ${size_code}    Set variable    ${EMPTY}
    Entry page via navimenu    ${navi_style_bank_path}    StyleBank
    Advanced search on style bank by style    ${searched_style}
    ${style_href}    Get element attribute    //a[text()='${searched_style}']@href    #/bin-java/efsnPackage.do_vendorStyleBankDetailImages?styleid=10014502&seasonid=2&year=2017
    ${style_id}    Get regexp matches    ${style_href}    styleid=(.*?)&seasonid    1
    ${style_id}    Get from list    ${style_id}    0
    Go to size info page    //a[contains(@href, '${style_id}') and text()='Sizes']
    ${size_table_default_nrows}    Get matching xpath count    //table[@class='table4']/tbody/tr[1]/following-sibling::tr    #8
    ${blank_size_nrows}    Get matching xpath count    //table[@class='table4']/tbody/tr[1]/following-sibling::tr/td[1]/input[@value='']    #1
    ${size_table_default_nrows}    Convert to integer    ${size_table_default_nrows}
    ${blank_size_nrows}    Convert to integer    ${blank_size_nrows}
    Run keyword if    ${blank_size_nrows}==${0}    Add More Sizes Rows
    ${new_size_xpath_index}    Evaluate    ${size_table_default_nrows}-${blank_size_nrows}+1
    Input Text    //table[@class='table4']/tbody/tr[1]/following-sibling::tr[${new_size_xpath_index}]//input[@name='size_name']    ${size_desc}
    Input Text    //table[@class='table4']/tbody/tr[1]/following-sibling::tr[${new_size_xpath_index}]//input[@name='size_code']    ${size_code}
    Click button    Save Size Info
    Wait until page does not contain element    ${please_wait_button}
    Wait until page contains    StyleBank

Edit-Sizes-Modify size name
    ${searched_style}    Set variable    SBUI001
    ${update_size_desc}    Set variable    XXS
    ${update_size_code}    Set variable    ${EMPTY}
    Entry page via navimenu    ${navi_style_bank_path}    StyleBank
    Advanced search on style bank by style    ${searched_style}
    ${style_href}    Get element attribute    //a[text()='${searched_style}']@href    #/bin-java/efsnPackage.do_vendorStyleBankDetailImages?styleid=10014502&seasonid=2&year=2017
    ${style_id}    Get regexp matches    ${style_href}    styleid=(.*?)&seasonid    1
    ${style_id}    Get from list    ${style_id}    0
    Go to size info page    //a[contains(@href, '${style_id}') and text()='Sizes']
    ${existed_size_name_nrows}    Get matching xpath count    //table[@class='table4']/tbody/tr[1]/following-sibling::tr/td[1]/input[@name='size_name' and not(@value='')]    #1
    ${existed_size_name_nrows}    Convert to integer    ${existed_size_name_nrows}
    Run keyword if    ${existed_size_name_nrows}==${0}    Fail    No Size for style: '${searched_style}'.
    ${random_existed_size_name_rowx}    Evaluate    random.randint(1,${existed_size_name_nrows})    random
    ${existed_size_name}    Get element attribute    //table[@class='table4']/tbody/tr[1]/following-sibling::tr[${random_existed_size_name_rowx}]//input[@name='size_name']@value
    Input Text    //table[@class='table4']/tbody/tr[1]/following-sibling::tr[${random_existed_size_name_rowx}]//input[@name='size_name']    ${update_size_desc}
    Input Text    //table[@class='table4']/tbody/tr[1]/following-sibling::tr[${random_existed_size_name_rowx}]//input[@name='size_code']    ${update_size_code}
    Click button    Save Size Info
    Wait until page does not contain element    ${please_wait_button}
    Wait until page contains    StyleBank

Edit-Sizes-Edit size code
    ${searched_style}    Set variable    SBUI001
    ${update_size_code}    Generate random string    6
    Entry page via navimenu    ${navi_style_bank_path}    StyleBank
    Advanced search on style bank by style    ${searched_style}
    ${style_href}    Get element attribute    //a[text()='${searched_style}']@href    #/bin-java/efsnPackage.do_vendorStyleBankDetailImages?styleid=10014502&seasonid=2&year=2017
    ${style_id}    Get regexp matches    ${style_href}    styleid=(.*?)&seasonid    1
    ${style_id}    Get from list    ${style_id}    0
    Go to size info page    //a[contains(@href, '${style_id}') and text()='Sizes']
    ${existed_size_name_nrows}    Get matching xpath count    //table[@class='table4']/tbody/tr[1]/following-sibling::tr/td[1]/input[@name='size_name' and not(@value='')]    #1
    ${existed_size_name_nrows}    Convert to integer    ${existed_size_name_nrows}
    Run keyword if    ${existed_size_name_nrows}==${0}    Fail    No Size for style: '${searched_style}'.
    ${random_existed_size_name_rowx}    Evaluate    random.randint(1,${existed_size_name_nrows})    random
    Comment    ${existed_size_name}    Get element attribute    //table[@class='table4']/tbody/tr[1]/following-sibling::tr[${random_existed_size_name_rowx}]//input[@name='size_name']@value
    Comment    Input Text    //table[@class='table4']/tbody/tr[1]/following-sibling::tr[${random_existed_size_name_rowx}]//input[@name='size_name']    ${existed_size_name}
    Input Text    //table[@class='table4']/tbody/tr[1]/following-sibling::tr[${random_existed_size_name_rowx}]//input[@name='size_code']    ${update_size_code}
    Click button    Save Size Info
    Wait until page does not contain element    ${please_wait_button}
    Wait until page contains    StyleBank

Edit-Sizes-Del size name
    ${searched_style}    Set variable    SBUI001
    Entry page via navimenu    ${navi_style_bank_path}    StyleBank
    Advanced search on style bank by style    ${searched_style}
    ${style_href}    Get element attribute    //a[text()='${searched_style}']@href    #/bin-java/efsnPackage.do_vendorStyleBankDetailImages?styleid=10014502&seasonid=2&year=2017
    ${style_id}    Get regexp matches    ${style_href}    styleid=(.*?)&seasonid    1
    ${style_id}    Get from list    ${style_id}    0
    Go to size info page    //a[contains(@href, '${style_id}') and text()='Sizes']
    ${existed_size_name_nrows}    Get matching xpath count    //table[@class='table4']/tbody/tr[1]/following-sibling::tr/td[1]/input[@name='size_name' and not(@value='')]    #1
    ${existed_size_name_nrows}    Convert to integer    ${existed_size_name_nrows}
    Run keyword if    ${existed_size_name_nrows}==${0}    Fail    No Size for style: '${searched_style}'.
    ${random_existed_size_name_rowx}    Evaluate    random.randint(1,${existed_size_name_nrows})    random
    ${size_id}    Get element attribute    //table[@class='table4']/tbody/tr[1]/following-sibling::tr[${random_existed_size_name_rowx}]//input[@name='style_size_id']@value
    Select checkbox    //input[@value='${size_id}' and @name='del_size']
    Click button    Save Size Info
    Wait until page does not contain element    ${please_wait_button}
    Wait until page contains    StyleBank

Edit-UPC-Edit DIM
    [Tags]    temp

Edit-UPC-Add a new UPC
    ${searched_style}    Set variable    SBUI001
    ${new_upc}    Generate random string    14    [NUMBERS]
    Entry page via navimenu    ${navi_style_bank_path}    StyleBank
    Advanced search on style bank by style    ${searched_style}
    ${style_href}    Get element attribute    //a[text()='${searched_style}']@href    #/bin-java/efsnPackage.do_vendorStyleBankDetailImages?styleid=10014502&seasonid=2&year=2017
    ${style_id}    Get regexp matches    ${style_href}    styleid=(.*?)&seasonid    1
    ${style_id}    Get from list    ${style_id}    0
    Go to upc page    ${searched_style}
    Page should not contain    No UPC Available
    ${colors_count}    Get matching xpath count    //table[@class='table4']/tbody/tr[1]/following-sibling::tr
    ${colors_count}    Convert to integer    ${colors_count}
    Run keyword if    ${colors_count}==${0}    Fail    No UPC for style: '${searched_style}'.
    ${random_upc_rowx}    Evaluate    random.randint(1,${colors_count})    random
    ${color_desc}    Get text    //table[@class='table4']/tbody/tr[1]/following-sibling::tr[${random_upc_rowx}]/td[1]
    ${color_desc}    Strip string    ${color_desc}
    Page should contain button    Edit
    Click button    Edit
    Wait until page contains element    //td[text()='${color_desc}']/following-sibling::td/input[@name='upc']
    Input text    //td[text()='${color_desc}']/following-sibling::td/input[@name='upc']    ${new_upc}
    Click Button    Update    #saveupc
    Wait until page does not contain element    ${wait_button}
    Wait until page contains    StyleBank

Edit-UPC-Add an exist UPC
    [Documentation]    [ER-30203] UPC code, 036182347312, already exists in our system.
    ${searched_style}    Set variable    SBUI001
    ${color_desc}    Set variable    SBCOLD001
    ${existed_upc}    Set variable    3910
    Entry page via navimenu    ${navi_style_bank_path}    StyleBank
    Advanced search on style bank by style    ${searched_style}
    ${style_href}    Get element attribute    //a[text()='${searched_style}']@href    #/bin-java/efsnPackage.do_vendorStyleBankDetailImages?styleid=10014502&seasonid=2&year=2017
    ${style_id}    Get regexp matches    ${style_href}    styleid=(.*?)&seasonid    1
    ${style_id}    Get from list    ${style_id}    0
    Go to upc page    ${searched_style}
    Page should not contain    No UPC Available
    ${colors_count}    Get matching xpath count    //table[@class='table4']/tbody/tr[1]/following-sibling::tr
    ${colors_count}    Convert to integer    ${colors_count}
    Run keyword if    ${colors_count}==${0}    Fail    No UPC for style: '${searched_style}'.
    ${random_upc_rowx}    Evaluate    random.randint(1,${colors_count})    random
    ${color_desc}    Get text    //table[@class='table4']/tbody/tr[1]/following-sibling::tr[${random_upc_rowx}]/td[1]
    ${color_desc}    Strip string    ${color_desc}
    Page should contain button    Edit
    Click button    Edit
    Wait until page contains element    //td[text()='${color_desc}']/following-sibling::td/input[@name='upc']
    Input text    //td[text()='${color_desc}']/following-sibling::td/input[@name='upc']    ${existed_upc}
    Click Button    Update
    Wait until page does not contain element    ${wait_button}
    Wait until page contains    ErrorMessage
    Page should contain    [ER-30203] UPC code, ${existed_upc}, already exists in our system.

Edit-UPC-Del UPC
    ${searched_style}    Set variable    SBUI001
    ${color_desc}    Set variable    SBCOLD001
    ${update_upc}    Set variable    ${EMPTY}
    Entry page via navimenu    ${navi_style_bank_path}    StyleBank
    Advanced search on style bank by style    ${searched_style}
    ${style_href}    Get element attribute    //a[text()='${searched_style}']@href    #/bin-java/efsnPackage.do_vendorStyleBankDetailImages?styleid=10014502&seasonid=2&year=2017
    ${style_id}    Get regexp matches    ${style_href}    styleid=(.*?)&seasonid    1
    ${style_id}    Get from list    ${style_id}    0
    Go to upc page    ${searched_style}
    Page should not contain    No UPC Available
    ${colors_count}    Get matching xpath count    //table[@class='table4']/tbody/tr[1]/following-sibling::tr
    ${colors_count}    Convert to integer    ${colors_count}
    Run keyword if    ${colors_count}==${0}    Fail    No UPC for style: '${searched_style}'.
    ${random_upc_rowx}    Evaluate    random.randint(1,${colors_count})    random
    ${color_desc}    Get text    //table[@class='table4']/tbody/tr[1]/following-sibling::tr[${random_upc_rowx}]/td[1]
    ${color_desc}    Strip string    ${color_desc}
    Page should contain button    Edit
    Click button    Edit
    Wait until page contains element    //td[text()='${color_desc}']/following-sibling::td/input[@name='upc']
    Input text    //td[text()='${color_desc}']/following-sibling::td/input[@name='upc']    ${update_upc}
    Click Button    Update
    Wait until page does not contain element    ${wait_button}
    Wait until page contains    StyleBank

Copy Style
    ${searched_style}    Set variable    SBUI001
    Entry page via navimenu    ${navi_style_bank_path}    StyleBank
    Advanced search on style bank by style    ${searched_style}
    ${searched_style_copy_xpath}    Set variable    //a[text()='${searched_style}']/parent::td//following-sibling::td/a[text()='Copy']
    Page should contain element    ${searched_style_copy_xpath}
    Click element    ${searched_style_copy_xpath}
    Wait until page contains    Copy of ${searched_style}    #Whether images would be copied.

Copy to PH Style-Only save
    ${searched_style}    Set variable    SBUI001
    Entry page via navimenu    ${navi_style_bank_path}    StyleBank
    Advanced search on style bank by style    ${searched_style}
    ${searched_style_copy_ph_xpath}    Set variable    //a[text()='${searched_style}']/parent::td//following-sibling::td/a[contains(text(), 'PH')]
    Page should contain element    ${searched_style_copy_ph_xpath}
    Click element    ${searched_style_copy_ph_xpath}
    Sleep    2
    Wait until page contains    CopyToPlaceHolder
    ${style_title}    Get text    //form[@id='placeholderstyleform']/table/tbody/tr/td[1]/table/tbody/tr[1]/td/b[@class='required']
    ${style_title}    Strip string    ${style_title}
    ${style_title}    Fetch from right    ${style_title}    *
    ${style_title}    Fetch from left    ${style_title}    :
    ${season}    Get selected list label    seasonid
    ${year}    Get selected list label    year
    ${season}    Strip string    ${season}
    ${year}    Strip string    ${year}
    Page should contain button    Save Style Info
    Click button    Save Style Info
    ${error}    Run keyword and return status    Wait until page contains    ErrorMessage    5
    Run keyword if    ${error}    Page should contain    [ER-30359] This ${style_title} already exists in the system for ${season} - ${year}. Please check your information and re-enter.
    Run keyword unless    ${error}    Page should contain    PlaceHolderStyles
    #check ph style
    Comment    Del
    ${upper_ph_style_name}    Convert to uppercase    ${searched_style}
    ${upper_ph_style_name}    Set variable    Copy of ${upper_ph_style_name}
    ${ph_style_checkbox_xpath}    Set variable    //td[contains(text(),'${upper_ph_style_name}')]/preceding-sibling::td/input[@name='placeholderstyleid']
    Delete selected ph styles    ${ph_style_checkbox_xpath}

Copy to PH Style-Edit color
    ${searched_style}    Set variable    SBUI001
    ${ph_style_name}    Set variable    AT-PH-${searched_style}-color
    ${update_color_code}    Set variable    UP_001
    ${update_color_desc}    Set variable    UP_BLANK
    Entry page via navimenu    ${navi_style_bank_path}    StyleBank
    Advanced search on style bank by style    ${searched_style}
    ${searched_style_copy_ph_xpath}    Set variable    //a[text()='${searched_style}']/parent::td//following-sibling::td/a[contains(text(), 'PH')]
    Page should contain element    ${searched_style_copy_ph_xpath}
    Click element    ${searched_style_copy_ph_xpath}
    Sleep    2
    Wait until page contains    CopyToPlaceHolder
    ${style_title}    Get text    //form[@id='placeholderstyleform']/table/tbody/tr/td[1]/table/tbody/tr[1]/td/b[@class='required']
    ${style_title}    Strip string    ${style_title}
    ${style_title}    Fetch from right    ${style_title}    *
    ${style_title}    Fetch from left    ${style_title}    :
    ${season}    Get selected list label    seasonid
    ${year}    Get selected list label    year
    ${season}    Strip string    ${season}
    ${year}    Strip string    ${year}
    ${ph_style_id}    Get value    name=style_id
    Comment    get a random color to update
    ${style_colors_descs}    Execute javascript    ${style_colors_descs_jquery}    #return array type    ${style_colors_descs_jquery}
    Log    ${style_colors_descs}
    Remove values from list    ${style_colors_descs}    ${SPACE}    ${EMPTY}
    Log    ${style_colors_descs}
    ${random_color_desc}    Evaluate    random.sample(${style_colors_descs},1)    random
    ${random_color_desc}    Get from list    ${random_color_desc}    0
    ${random_color_id}    Get value    //input[@value='${random_color_desc}']/parent::td/preceding-sibling::td/input[@name='deletecolorid']
    Input text    name=stylenum    ${ph_style_name}
    ${share_to_child_xpath}    Set variable    //input[@value='${random_color_id}' and @name='colorid']/parent::td/preceding-sibling::td/input[@name='issharetochild']
    ${uplade_color_code_xpath}    Set variable    //input[@value='${random_color_id}' and @name='deletecolorid']/parent::td/following-sibling::td/input[@name='colorcode']
    ${update_color_desc_xpath}    Set variable    //input[@value='${random_color_id}' and @name='deletecolorid']/parent::td/following-sibling::td/input[@name='colorname']
    Select checkbox    ${share_to_child_xpath}    #share to child
    Input text    ${uplade_color_code_xpath}    ${update_color_code}
    Input text    ${update_color_desc_xpath}    ${update_color_desc}
    Page should contain button    Save Style Info
    Click button    Save Style Info
    ${error}    Run keyword and return status    Wait until page contains    ErrorMessage    5
    Run keyword if    ${error}    Page should contain    [ER-30359] This ${style_title} already exists in the system for ${season} - ${year}. Please check your information and re-enter.
    Run keyword unless    ${error}    Page should contain    PlaceHolderStyles
    Comment    Check saved result
    ${expected_style_num}    Convert to uppercase    ${searched_style}
    ${expected_result_color_code}    Get substring    ${update_color_code}    0    4
    ${expected_result_color_code}    Convert to uppercase    ${expected_result_color_code}
    ${expected_result_color_desc}    Convert to uppercase    ${update_color_desc}
    ${is_displayed}    Run keyword and return status    Page should contain    ${ph_style_name}
    Run keyword unless    ${is_displayed}    Advanced search on style bank by style    ${ph_style_name}
    ${is_new_ph}    Run keyword and return status    Page should contain element    //a[contains(@href,'${ph_style_id}') and text()='Edit']    #if style id not exist, then this ph style is a deleted ph style.
    Run keyword if    ${is_new_ph}    Click element    //a[contains(@href,'${ph_style_id}') and text()='Edit']    #Edit
    Run keyword unless    ${is_new_ph}    Click element    //td[contains(text(),'${expected_style_num}')]/following-sibling::td//a[text()='Edit']
    Wait until page contains    PlaceHolderInfo    5
    ${result_color_codes}    Execute javascript    ${style_colors_codes_jquery}
    ${result_color_descs}    Execute javascript    ${style_colors_descs_jquery}
    Run keyword and continue on failure    List should contain value    ${result_color_codes}    ${expected_result_color_code}
    Run keyword and continue on failure    List should contain value    ${result_color_descs}    ${expected_result_color_desc}
    Comment    Del
    go back
    Wait until page contains    PlaceHolderStyles
    ${upper_ph_style_name}    Convert to uppercase    ${ph_style_name}
    ${ph_style_checkbox_xpath}    Set variable    //td[contains(text(),'${upper_ph_style_name}')]/preceding-sibling::td/input[@name='placeholderstyleid']
    Delete selected ph styles    ${ph_style_checkbox_xpath}

Copy to PH Style-Edit style info
    ${searched_style}    Set variable    SBUI001
    ${ph_style_name}    Set variable    AT-PH-${searched_style}-styleinfo
    Entry page via navimenu    ${navi_style_bank_path}    StyleBank
    Advanced search on style bank by style    ${searched_style}
    ${searched_style_copy_ph_xpath}    Set variable    //a[text()='${searched_style}']/parent::td//following-sibling::td/a[contains(text(), 'PH')]
    Page should contain element    ${searched_style_copy_ph_xpath}
    Click element    ${searched_style_copy_ph_xpath}
    Sleep    2
    Wait until page contains    CopyToPlaceHolder
    ${style_title}    Get text    //form[@id='placeholderstyleform']/table/tbody/tr/td[1]/table/tbody/tr[1]/td/b[@class='required']
    ${style_title}    Strip string    ${style_title}
    ${style_title}    Fetch from right    ${style_title}    *
    ${style_title}    Fetch from left    ${style_title}    :
    ${season}    Get selected list label    seasonid
    ${year}    Get selected list label    year
    ${season}    Strip string    ${season}
    ${year}    Strip string    ${year}
    ${element_names}    Create list    stylenum    descript    additionalinfo
    ${element_txts}    Create list    ${ph_style_name}    ttt    ddd
    : FOR    ${ele_name}    ${ele_txt}    IN ZIP    ${element_names}    ${element_txts}
    \    Input text    name=${ele_name}    ${ele_txt}
    Comment    Select from list which not required
    ${ele_sel_names}    Create list    stylename    fabrication    hangfold    delivery    groupcategory
    ...    productgroup    category    sizerangeid    fibercontent    productiontype    agegroup
    ...    gearline    countrycode    seasoncode    stylefabric
    : FOR    ${ele_sel_name}    IN    @{ele_sel_names}
    \    ${items}    Get list items    name=${ele_sel_name}
    \    ${selected_item}    Get selected list label    name=${ele_sel_name}
    \    Remove values from list    ${items}    ${selected_item}
    \    ${items_len}    Get length    ${items}
    \    Continue for loop if    ${items_len}==${0}
    \    ${random_string}    Generate random string
    \    ${random_item}    Evaluate    random.sample(${items},1)    random
    \    ${random_item}    Get from list    ${random_item}    0
    \    Run keyword if    '${random_item}'=='<NEW>'    Select from list by label    name=${ele_sel_name}    ${random_item}
    \    ${ele_sel_name_out_id}    Fetch from left    ${ele_sel_name}    id
    \    Run keyword if    '${random_item}'=='<NEW>'    Input text    name=${ele_sel_name_out_id}text    ${random_string}
    \    Select from list by label    name=${ele_sel_name}    ${random_item}
    Comment    Select from list which required
    : FOR    ${ele_requirel_name}    IN    @{PRODUCT_REQUIRED_ATTRIBUTES_NAMES}
    \    ${is_select_ele}    Run keyword and return status    Page should contain list    ${ele_requirel_name}
    \    Run keyword if    ${is_select_ele}==${False}    Input text    name=${ele_requirel_name}    ${ph_style_name}
    \    Continue for loop if    ${is_select_ele}==${False}
    \    ${items}    Get list items    ${ele_requirel_name}
    \    ${selected_item}    Get selected list label    ${ele_requirel_name}
    \    Remove values from list    ${items}    ${selected_item}    ${SPACE}
    \    ${items_len}    Get length    ${items}
    \    Continue for loop if    ${items_len}==${0}
    \    ${random_item}    Evaluate    random.sample(${items},1)    random
    \    ${random_item}    Get from list    ${random_item}    0
    \    Select from list by label    ${ele_requirel_name}    ${random_item}
    \    ${random_string}    Generate random string
    \    Run keyword if    '${random_item}'=='<NEW>'    Input text    name=${ele_requirel_name}text    ${random_string}
    Page should contain button    Save Style Info
    Click button    Save Style Info
    ${error}    Run keyword and return status    Wait until page contains    ErrorMessage    5
    Run keyword if    ${error}    Page should contain    [ER-30359] This ${style_title} already exists in the system for ${season} - ${year}. Please check your information and re-enter.
    Run keyword unless    ${error}    Wait until page contains    PlaceHolderStyles
    Comment    Del
    ${upper_ph_style_name}    Convert to uppercase    ${ph_style_name}
    ${ph_style_checkbox_xpath}    Set variable    //td[contains(text(),'${upper_ph_style_name}')]/preceding-sibling::td/input[@name='placeholderstyleid']
    Delete selected ph styles    ${ph_style_checkbox_xpath}
